{
  "hash": "17af53f6dc5d9542084c3794424cfc77",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Calculating Phi & Psi in Geometry Nodes\"\nsubtitle: Torsion angle calculations for visualisation and animation\nauthor: Brady Johnston\njupyter: python3\n---\n\n\n\n\n## Vector Math\n\n## Angle Between two Vectors in 3D\n\nTo calculate the a dihedral, we have to be able to calculate the angle between two vectors in 3D space.\nThis can be done with the following equation:\n\n$$\n\\theta = \\cos^{-1}{\\frac{{\\vec{A}}\\cdotp{\\vec{B}}}{|\\vec{A}||\\vec{B}|}}\n$$\n\nIf you are a little rusty with you mathematical notation, $\\vec{A}$ means 'vector A', $|\\vec{A}|$ means the length of vector A, the small dot between them means 'dot product'.\n\n1.  Dot product of vectors $\\vec{A}$ and $\\vec{B}$, which gives a single number between -1 and 1.\n2.  Divide this by the product of the length of each vector ($|\\vec{A}| * |\\vec{B}|$)\n3.  Get the angle by calculating $cos^{-1}$ of the resulting number\n\n![](images/CleanShot%202024-01-23%20at%2009.02.25@2x.png)\n\nIf both vectors are normalised, then length & division steps are not needed.\nI like this approach a bit better because the resulting node group is cleaner.\n\nA normalised vector can be denoted with double lines $||\\vec{A}||$, which means the original vector has been scaled to have a length of exactly 1.\n\n$$\n\\theta = \\cos^{-1}(||\\vec{A}||\\cdotp||\\vec{B}||)\n$$\n\n![](images/CleanShot%202024-01-23%20at%2009.03.55@2x.png)\n\nThis just gives an absolute angle between two 3D vectors.\nWhat if we wanted the angle to be 'clockwise' or 'counter-clockwise', based on some reference axis?\n\n## Angle between two vectors, along an axis\n\nThis first requires us to to get the vectors which are *perpendicular* to the axis.\nThen we can calculate the angle between the two vectors, which will give the rotation around the axis.\nTo determine whether this rotation is 'clockwise' (positive) or 'counter-clockwise' (negative) we need to do an extra step.\n\nFor this calculation we will require four vectors, $\\vec{A}$, $\\vec{B}$, $\\vec{C}$, $\\vec{D}$.\nThis will represent 4 points with 3 vectors between the points.\nthe vectors between the points will be denoted as $\\vec{AB} = \\mathbf{i}$, $\\vec{BC} = \\mathbf{j}$, $\\vec{CD} = \\mathbf{k}$.\n\nWhile we can calculate the angle between $\\mathbf{i}$ and $\\mathbf{k}$, to get just the angle in terms of rotation around the axis $\\mathbf{j}$, we first need to get 'vector rejection' of $\\mathbf{i}$ and $\\mathbf{k}$ from the axis $\\mathbf{j}$.\nThis will be denoted as $\\mathbf{i}_{\\perp \\mathbf{j}}$ and $\\mathbf{k}_{\\perp \\mathbf{j}}$.\nThese can be computed by first projecting the vectors onto the axis, then subtracting the projected vector from the original vector.\n\nTo get the 'sign' or 'clockwise / anti-clockwise' direction of the angle, we compute the cross product of the two vectors, get the dot product with the axis, and if this value is less than 0 it's negative (anti-clockwise), otherwise it's positive (clockwise).\n\n$$\n\\theta = \\cos^{-1}({||\\mathbf{i}_{\\perp \\mathbf{j}}||{\\cdotp{||\\mathbf{k}_{\\perp \\mathbf{j}}}}||})\n$$\n\n$$\nAngle = sgn(\\mathbf{i}_{\\perp \\mathbf{j}}\\times\\mathbf{k}_{\\perp \\mathbf{j}}\\cdot\\mathbf{j}) * \\theta\n$$\n\n![The final node group which calculates the angle of two vectors, when 'looking' down an axis.](images/CleanShot%202024-01-23%20at%2012.03.05@2x.png){fig-alt=\"A screenshot of a node graph from Blender's Geometry Nodes, which shows a number of vector match and function nodes, which will calculate the angle between two vectors along an axis.\"}\n\n## What are torsion angles?\n\nLets start here, because I was still a little shaky with what ùù´ (Phi) and ùûá (Psi) really were (or which greek symbol was which).\nI still have trouble with remembering which is which (Psi looks a bit like a trident, which is held by **P**o**S**e**I**don).\n\nIn structural biology, phi & psi angles important metrics when checking how well the model is built, and how 'real' it might be.\nIn protein secondary structure.\n\nBefore we get too into the weeds, what is actually being measured here?\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}