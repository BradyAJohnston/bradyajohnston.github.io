{
  "hash": "d6fe9710abd9cb3a615fff361520d19f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Extensions on GitHub\nauthor: Brady Johnston\ndate: 2025-09-20\ndraft: true\ntoc: true\ntoc-depth: 1\nformat: \n  revealjs: \n    theme: [dracula, theme.scss]\n    output-file: slides.html\n  html: default\n\nexecute: \n  cache: true\n  eval: true\n---\n\n::: {.content-visible unless-format=\"revealjs\"}\n\nThis information was presented for the 2025 Blender conference. Recording of the talk can be found here and the slides are also available here.\n\n{{< revealjs \"slides.html\" >}}\n\n:::\n\n# Who am I?\n\n## I’m Brady!\n\n::: {.content-visible when-format=\"revealjs\"}\n\n- Biochemist & Biophysicist turned 3D Animator\n\n- 2022 talk about Visualising Viruses\n\n:::\n\n<iframe id=\"ytplayer\" type=\"text/html\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/adhTmwYwOiA?autoplay=1?mute=1&origin=http://bradyajohnston.github.io\" frameborder=\"0\"></iframe>\n\n\n## Molecular Nodes {background-video=\"https://imgur.com/IvMSiE1.mp4\" background-video-loop=\"true\" background-video-muted=\"true\"}\n\n::: {.content-visible when-format=\"revealjs\"}\n<!-- will only appear in slides -->\n- Import & Animation of molecular data sets\n- Brings data inside of Blender\n- Builds around Geometry Nodes\n:::\n\n\n:::: {.content-visible unless-format=\"revealjs\"}\n<!-- will only appear in blogpost -->\n\n\nThis hasn't been the first attempt at bringing molecular data sets into Blender, but I blieve it has so far been the most successful.\nIn a very short summary, we can think of atoms and molecules as a collection of vertices and edges.\nBlender knows how to handle vertices and edges. Once we have the data inside of Blender (along with a large number of 'molecular' attributes for points and edges) then the full power of Geometry Nodes is at our fingertips for molecular visualisation.\n\n::: {#fig-clathrin}\n<video src=\"https://imgur.com/IvMSiE1.mp4\" width=\"100%\" autoplay controls muted loop></video>\n\n\nA clathrin protein cage appearing, or summoning a protein via a DNA circle.\n\n:::\n<video src=\"https://imgur.com/h0taqfP.mp4\" width=\"100%\" autoplay controls muted loop></video>\n::::\n\n::: {.content-visible when-format=\"revealjs\"}\n## Molecular Nodes\n<!-- will only appear in slides -->\n:::\n\n<video src=\"https://imgur.com/trg0voP.mp4\" width=\"100%\" autoplay controls muted loop></video>\n\n\n\n## Add-on & a Python Package?\n\n::: {.content-visible when-format=\"revealjs\"}\n<!-- will only appear in slides -->\n:::\n\n::: {.content-visible unless-format=\"revealjs\"}\n> It's less likely than you'd think!\n\nCreating an add-on for Blender that can also be built and shipping as a python package was quite the task. \nIt leads to a variety of problems and strange engineering issues that come with writing code for Blender that a 'regular' python package wouldn't have to deal with. \n\nCovering that topic with all of our learnings would be a massive blog post itself. \nThe short version is that you can install molecularnodes from [`pypi`](https://pypi.org/p/molecularnodes) and use if for molecular rendering in python scripts of jupyter notebooks like this one.\n\n:::\n\n::: {#cell-fig-dna .cell output-location='slide' execution_count=1}\n``` {.python .cell-code code-line-numbers=\"|3-8|10-11|13-14\"}\n# !pip install bpy molecularnodes\n\nimport molecularnodes as mn\ncanvas = mn.Canvas(\n    engine=mn.scene.Cycles(samples=16),\n    resolution=(1280, 720),\n    transparent=True\n    )\n\nmol = mn.Molecule.fetch(\"1BNA\")\nmol.add_style(\"vdw\")\n\ncanvas.frame_view(mol, (3.14, 3.14 / 2, 0))\ncanvas.snapshot()\n```\n\n::: {.cell-output .cell-output-display}\n![X-ray crystallography structure of a fragment of DNA.](index_files/figure-revealjs/fig-dna-output-1.png){#fig-dna}\n:::\n:::\n\n\n# Building on GitHub\n\n::: {.content-visible when-format=\"revealjs\"}\n## Molecular Nodes on GitHub\n![](https://imgur.com/FSdfKNs.png)\n:::\n\n## Why build on GitHub?\n\n::: {.content-visible when-format=\"revealjs\"}\n:::: {.fragment}\n- Not paid at all, just benefited a lot from using it\n::::\n:::: {.fragment}\n- Free file hosting (within 'reason')\n::::\n:::: {.fragment}\n- Free compute for automated testing and deployment (public projects)\n::::\n:::: {.fragment}\n- Increased visibility [(>1,000 ⭐️!)]{.fragment}[(not guaranteed)]{.fragment}\n::::\n:::\n\n\n## Building & Distributing MN\n\n![](https://imgur.com/I4ky42g.png)\n\n## Building & Distributing MN\n\n- Run tests against different versions of Blender (including daily builds)\n- Run tests against `bpy` installed via `pip` for automated pipelines\n- Download and bundle `.whl` files with extension\n- Upload extension to GitHub & Extensions platform\n\n## Running Tests\n\n::: {.bigyaml}\n\n```{.yml code-line-numbers=\"|3-7|9-16|19|20-22|23-35\"}\nname: tests\n\non: \n    push:\n      branches: [\"main\"]\n    pull_request:\n      branches: [\"*\"]\n    \njobs:\n    blender:\n        runs-on: ${{ matrix.os }}\n        strategy:\n            max-parallel: 4\n            fail-fast: false\n            matrix:\n              version: [\"4.5\", \"daily\"]\n              os: [ubuntu-latest, macos-latest, windows-latest]\n        steps:\n            - uses: actions/checkout@v4\n            - uses: BradyAJohnston/setup-blender@v3\n              with:\n                version: ${{ matrix.version }}\n            - name: Install in Blender\n              run: |\n                blender -b -P tests/python.py -- -m pip install \".[test]\"\n            - name: Run Tests\n              run: |\n                blender -b -P tests/run.py -- -vv tests --cov --cov-report=xml\n    \n            - name: Expose coverage as a CI download \n              uses: actions/upload-artifact@v4\n              if: matrix.os == 'ubuntu-latest' && matrix.version == '4.2.5'\n              with:\n                name: coverage.xml\n                path: coverage.xml\n\n            - name: Upload coverage reports to Codecov\n              if: matrix.os == 'ubuntu-latest'\n              uses: codecov/codecov-action@v3\n```\n:::\n\n\n## Anatomy of a GitHub Action\nsetup-blender\nbuild and distribute documentation\n\n# Distributing on GitHub\n\n## Distributing your own Extensions\nDetails and built: https://bradyajohnston.github.io/extensions/\nSubscribe with:\n\n```bash\nhttps://bradyajohnston.github.io/extensions/index.json\n```\n\n\n\n## How is it Built?\n\n```yaml\nname: Download Release Files\n\non:\n  push:\n    branches: [\"main\"]\n  schedule:\n    - cron: '0 0 * * *'\n\njobs:\n  build-website:\n    runs-on: macos-14\n    permissions: write-all\n    steps:\n      - uses: actions/checkout@v4\n      - uses: quarto-dev/quarto-actions/setup@v2\n      - uses: bradyajohnston/setup-blender@v2.1\n        with: \n          version: 4.3.2\n      - name: Install uv\n        uses: astral-sh/setup-uv@v4\n        with:\n            version: \"latest\"\n    \n      - name: Get Release Assets\n        run: |\n          uv run --with requests scripts/download.py\n        env:\n          GITHUB_TOKEN: ${{ github.token }}\n      - name: Generate index.json\n        run: |\n            blender --command extension server-generate --repo-dir=repo\n    \n      - name: Quarto Render\n        run: |\n          uv run --with pyyaml quarto render\n    \n      - name: Publish to GitHub Pages (and render)\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n            target: gh-pages\n            path: .\n            render: false\n        env:\n            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\n## How is it built?\n\n```yaml\nname: Download Release Files\n\non:\n  push:\n    branches: [\"main\"]\n  schedule:\n    - cron: '0 0 * * *'\n\njobs:\n  build-website:\n    runs-on: macos-14\n    permissions: write-all\n    steps:\n      - uses: bradyajohnston/setup-blender@v2.1\n        with: \n          version: 4.3.2\n      - name: Get Release Assets\n        run: |\n          uv run --with requests scripts/download.py\n      - name: Generate index.json\n        run: |\n            blender --command extension server-generate --repo-dir=repo\n    \n      - name: Quarto Render\n        run: |\n          uv run --with pyyaml quarto render\n    \n      - name: Publish to GitHub Pages (and render)\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n            target: gh-pages\n            path: .\n            render: false\n        env:\n            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\n# A live example\n\n::: {.content-visible when-format=\"revealjs\"}\n<!-- will only appear in slides -->\n:::\n\n::: {.content-visible unless-format=\"revealjs\"}\n<!-- will only appear in blogpost -->\n:::\n\n",
    "supporting": [
      "index_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}