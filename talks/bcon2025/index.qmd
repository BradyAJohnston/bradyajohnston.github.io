---
title: Extensions on GitHub
author: Brady Johnston
date: 2025-09-19
draft: true
toc: true
toc-depth: 1
format: 
  revealjs: 
    theme: [dracula, theme.scss]
    output-file: slides.html
  html: default

execute: 
  cache: true
  eval: true
---

::: {.content-visible unless-format="revealjs"}

These slides and accompanying blog post were created for my talk at the 2025 Blender conference. 

See the slides below of click directly on [this link](slides.html).

{{< revealjs "slides.html" >}}

:::

# Who am I?

## I’m Brady!

::: {.content-visible when-format="revealjs"}

- Biochemist & Biophysicist turned 3D Animator

- 2022 talk about Visualising Viruses

:::

<iframe id="ytplayer" type="text/html" width="800" height="450" src="https://www.youtube.com/embed/adhTmwYwOiA?autoplay=1?mute=1&origin=http://bradyajohnston.github.io" frameborder="0"></iframe>


## Molecular Nodes {background-video="https://imgur.com/IvMSiE1.mp4" background-video-loop="true" background-video-muted="true"}

::: {.content-visible when-format="revealjs"}
<!-- will only appear in slides -->
- Import & Animation of molecular data sets
- Brings data inside of Blender
- Builds around Geometry Nodes
:::


:::: {.content-visible unless-format="revealjs"}
<!-- will only appear in blogpost -->


This hasn't been the first attempt at bringing molecular data sets into Blender, but I blieve it has so far been the most successful.
In a very short summary, we can think of atoms and molecules as a collection of vertices and edges.
Blender knows how to handle vertices and edges. Once we have the data inside of Blender (along with a large number of 'molecular' attributes for points and edges) then the full power of Geometry Nodes is at our fingertips for molecular visualisation.

::: {#fig-clathrin}
<video src="https://imgur.com/IvMSiE1.mp4" width="100%" autoplay controls muted loop></video>



A clathrin protein cage appearing, or summoning a protein via a DNA circle.

:::
<video src="https://imgur.com/h0taqfP.mp4" width="100%" autoplay controls muted loop></video>
::::

::: {.content-visible when-format="revealjs"}
## Molecular Nodes
<!-- will only appear in slides -->
:::

<video src="https://imgur.com/trg0voP.mp4" width="100%" autoplay controls muted loop></video>



## Add-on & a Python Package?

::: {.content-visible when-format="revealjs"}
<!-- will only appear in slides -->
:::

::: {.content-visible unless-format="revealjs"}
> It's less likely than you'd think!

Creating an add-on for Blender that can also be built and shipping as a python package was quite the task. 
It leads to a variety of problems and strange engineering issues that come with writing code for Blender that a 'regular' python package wouldn't have to deal with. 

Covering that topic with all of our learnings would be a massive blog post itself. 
The short version is that you can install molecularnodes from [`pypi`](https://pypi.org/p/molecularnodes) and use if for molecular rendering in python scripts of jupyter notebooks like this one.

:::

```{python}
#| echo: true
#| label: fig-dna
#| fig-cap: X-ray crystallography structure of a fragment of DNA.
#| output-location: slide
#| code-line-numbers: "|3-8|10-11|13-14"
# !pip install bpy molecularnodes

import molecularnodes as mn
canvas = mn.Canvas(
    engine=mn.scene.Cycles(samples=16),
    resolution=(1280, 720),
    transparent=True
    )

mol = mn.Molecule.fetch("1BNA")
mol.add_style("vdw")

canvas.frame_view(mol, (3.14, 3.14 / 2, 0))
canvas.snapshot()
```

# Building on GitHub

::: {.content-visible when-format="revealjs"}
## Molecular Nodes on GitHub
![](https://imgur.com/FSdfKNs.png)
:::

## Why build on GitHub?

::: {.content-visible when-format="revealjs"}
:::: {.fragment}
- Not paid at all, just benefited a lot from using it
::::
:::: {.fragment}
- Other platforms offer similar (CodeBerg etc.) I just have experience with GitHub
::::
:::: {.fragment}
- Free file hosting (within 'reason')
::::
:::: {.fragment}
- Free compute for automated testing and deployment (public projects)
::::
:::: {.fragment}
- Increased visibility [(>1,000 ⭐️!)]{.fragment}[(not guaranteed)]{.fragment}
::::
:::


## Building & Distributing MN

![](https://imgur.com/I4ky42g.png)

## Building & Distributing MN

- Run tests against different versions of Blender (including daily builds)
- Run tests against `bpy` installed via `pip` for automated pipelines
- Download and bundle `.whl` files with extension
- Upload extension to GitHub & Extensions platform

## Running Tests

::: {.bigyaml}

```{.yml code-line-numbers="|3-7|9-16|19|20-22|23-35"}
name: tests

on: 
    push:
      branches: ["main"]
    pull_request:
      branches: ["*"]
    
jobs:
    blender:
        runs-on: ${{ matrix.os }}
        strategy:
            max-parallel: 4
            fail-fast: false
            matrix:
              version: ["4.5", "daily"]
              os: [ubuntu-latest, macos-latest, windows-latest]
        steps:
            - uses: actions/checkout@v4
            - uses: BradyAJohnston/setup-blender@v3
              with:
                version: ${{ matrix.version }}
            - name: Install in Blender
              run: |
                blender -b -P tests/python.py -- -m pip install ".[test]"
            - name: Run Tests
              run: |
                blender -b -P tests/run.py -- -vv tests --cov --cov-report=xml
    
            - name: Expose coverage as a CI download 
              uses: actions/upload-artifact@v4
              if: matrix.os == 'ubuntu-latest' && matrix.version == '4.2.5'
              with:
                name: coverage.xml
                path: coverage.xml

            - name: Upload coverage reports to Codecov
              if: matrix.os == 'ubuntu-latest'
              uses: codecov/codecov-action@v3
```
:::

## Breaking 5.0 Changes

Tests are run daily on MacOS, Windows & Linux against the latest daily alpha builds from Blender.

:::: {.fragment}
- `BLENDER_EEVEE_NEXT` renamed to `BLENDER_EEVEE` [#855](https://github.com/BradyAJohnston/MolecularNodes/pull/885)
::::

:::: {.fragment}
- Slight change in volume -> mesh [#897](https://github.com/BradyAJohnston/MolecularNodes/pull/897)
::::

:::: {.fragment}
- Compositor no longer has `use_nodes` [#971](https://github.com/BradyAJohnston/MolecularNodes/pull/971)
::::

:::: {.fragment}
- `Set Curve Resolution` not updating datablock [#141721](https://projects.blender.org/blender/blender/issues/141721#issuecomment-1625189)
::::

::: {.content-visible when-format="revealjs"}
<!-- will only appear in slides -->
:::

::: {.content-visible unless-format="revealjs"}
<!-- will only appear in blogpost -->
These were some of the recent changes that were breaking the add-on but automated testing alterted us and we were able to fix it quickly. When 5.0 is released as long as we keep fixing the problems as they appear we can be confident that it will work day-of. 

Fixing individual errors as they appear is also _much_ easier to debug than testing once the beta releases happen (or worse the final release) where multiple failures might pile up on top of each other.
:::

## Anatomy of a GitHub Action
setup-blender
build and distribute documentation

# Distributing on GitHub

## Distributing your own Extensions
Details and built: https://bradyajohnston.github.io/extensions/
Subscribe with:

```bash
https://bradyajohnston.github.io/extensions/index.json
```



## How is it Built?

```yaml
name: Download Release Files

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-website:
    runs-on: macos-14
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - uses: quarto-dev/quarto-actions/setup@v2
      - uses: bradyajohnston/setup-blender@v2.1
        with: 
          version: 4.3.2
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
            version: "latest"
    
      - name: Get Release Assets
        run: |
          uv run --with requests scripts/download.py
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Generate index.json
        run: |
            blender --command extension server-generate --repo-dir=repo
    
      - name: Quarto Render
        run: |
          uv run --with pyyaml quarto render
    
      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2
        with:
            target: gh-pages
            path: .
            render: false
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```

## How is it built?

```yaml
name: Download Release Files

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-website:
    runs-on: macos-14
    permissions: write-all
    steps:
      - uses: bradyajohnston/setup-blender@v2.1
        with: 
          version: 4.3.2
      - name: Get Release Assets
        run: |
          uv run --with requests scripts/download.py
      - name: Generate index.json
        run: |
            blender --command extension server-generate --repo-dir=repo
    
      - name: Quarto Render
        run: |
          uv run --with pyyaml quarto render
    
      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2
        with:
            target: gh-pages
            path: .
            render: false
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```

## A live example


::: {.content-visible when-format="revealjs"}
<!-- will only appear in slides -->
[github.com/BradyAJohnston/monkeymadness](https://github.com/BradyAJohnston/monkeymadness)
:::

:::: {#fig-monkey-madness}

<video src="https://imgur.com/rfPbaUi.mp4" heigh="70%" autoplay controls muted loop></video>

The hottest new monkey-spawning add-on! (But is there a bug?)

::::

::: {.content-visible unless-format="revealjs"}
<!-- will only appear in blogpost -->



This is a minimal example of an add-on we can subscribe to.
![](https://imgur.com/bawxoLK.png)

:::


## Your Personal Extensions Repo
::: {.fragment}
- Build and release add-ons on GitHub (through automations!) in their own repos
:::
::: {.fragment}
- Compile multiple add-ons in a single subscribeable repo
:::
::: {.fragment}
- Users add 'your personal repo' - they get updates just like they would from the official Extensions platform
:::
::: {.fragment}
- [bradyajohnston.github.io/extensions](https://bradyajohnston.github.io/extensions)
:::


## Testing your Add-ons

::: {.content-visible when-format="revealjs"}
Check out Spencer's talk on testing add-ons: 

![](./img/spencermtalk.png){fig-align="center"}
:::

::: {.content-visible unless-format="revealjs"}
Checko out Spencer's talk on testing add-ons [here](https://docs.google.com/presentation/d/1fpKdehYaquHgWHV9NeWn7qkTfVRqRJMc7SklBTR4tmc/edit?slide=id.p#slide=id.p).
:::


::: {.content-visible when-format="revealjs"}
<!-- will only appear in slides -->
:::

::: {.content-visible unless-format="revealjs"}
<!-- will only appear in blogpost -->
:::