atom.select.pdb(dna, resno = 1)$xyz
atom.select.pdb(dna, resno = 1, value = TRUE)$atom
atom.select.pdb(dna, resno = 1, value = TRUE)$atom
pos <- atom.select.pdb(dna, resno = 1, value = TRUE)$atom
pos$x
library(tidyverse)
dna <- bio3d::read.pdb("1bna")
pos <- atom.select.pdb(dna, resno = 1, value = TRUE)$atom
pos %>%
mutate(
x = x - min(x),
y = y - min(y),
z = z - min(z)
)
atom.select.pdb(pos, elety = "C1'")
atom.select.pdb(dna, elety = "C1'", resno = 1)
atom.select.pdb(dna, elety = "C1'", resno = 1, value = TRUE)
c_c1 <- atom.select.pdb(dna, elety = "C1'", resno = 1, value = TRUE)
pos %>%
mutate(
x = x - c_c1$xyz$x,
y = y - c_c1$xyz$y,
z = z - c_c1$xyz$y
)
pos %>%
mutate(
x = x - c_c1$xyz$x,
y = y - c_c1$xyz$y,
z = z - c_c1$xyz$y
)
c_c1
c_c1$
pos %>%
mutate(
x = x - c_c1$atom$x,
y = y - c_c1$atom$y,
z = z - c_c1$atom$y
)
pos
pos %>%
mutate(
x = x - c_c1$atom$x,
y = y - c_c1$atom$y,
z = z - c_c1$atom$y
)
pos %>%
mutate(
x = x - c_c1$atom$x,
y = y - c_c1$atom$y,
z = z - c_c1$atom$z
)
values <- pos %>%
mutate(
x = x - c_c1$atom$x,
y = y - c_c1$atom$y,
z = z - c_c1$atom$z
)
pos
c_c1
c_tes <- c_c1
c_tes$atom <- values
r3dmol::m_glimpse(c_tes)
r3dmol::m_glimpse(c_tes, highlight = r3dmol::m_sel())
r3dmol::m_glimpse(c_tes, highlight = r3dmol::m_sel(resno = 1))
r3dmol::m_glimpse(c_tes, highlight = r3dmol::m_sel(resi = 1))
library(r3dmol)
r3dmol() %>%
m_add_model(m_bio3d(c_tes)) %>%
m_add_style()
r3dmol() %>%
m_add_model(m_bio3d(c_tes)) %>%
m_add_style(m_style_sphere())
r3dmol() %>%
m_add_model(m_bio3d(c_tes)) %>%
m_add_style(m_style_sphere()) %>%
m_zoom_to()
c_tes <- atom.select.pdb(dna, resno = 1, value = TRUE)
c_tes$atom <- values
r3dmol() %>%
m_add_model(m_bio3d(c_tes)) %>%
m_add_style(m_style_sphere()) %>%
m_zoom_to()
r3dmol() %>%
m_add_model(m_bio3d(c_tes)) %>%
m_add_style(m_style_sphere(scale = 0.2)) %>%
m_zoom_to()
c_tes$atom %>%
as_tibble()
r3dmol() %>%
m_add_model(m_fetch_pdb("1bna")) %>%
m_add_style(m_style_sphere(scale = 0.2)) %>%
m_zoom_to()
r3dmol() %>%
m_add_model(m_fetch_pdb("1bna")) %>%
m_add_style(m_style_ballnstick()) %>%
m_zoom_to()
library(tidyverse)
read.table("G:/bjohnston/BAJ_01/HILLS")
read.table("G:/bjohnston/BAJ_01/HILLS") %>%
as_tibble()
df <- read.table("G:/bjohnston/BAJ_01/HILLS") %>%
as_tibble()
mdfret::readhills("G:/bjohnston/BAJ_01/HILLS")
mdfret::readhills("G:/bjohnston/BAJ_01/HILLS") %>%
as_tibble()
df <- mdfret::readhills("G:/bjohnston/BAJ_01/HILLS") %>%
as_tibble()
df %>%
filter(time == 1)
df %>%
filter(time == 2)
df %>%
filter(time < 2)
mdfret::readcolvar("G:/bjohnston/BAJ_01/COLVAR_METAD")
df <- mdfret::readcolvar("G:/bjohnston/BAJ_01/COLVAR_METAD") %>%
as_tibble
df <- mdfret::readcolvar("G:/bjohnston/BAJ_01/COLVAR_METAD") %>%
as_tibble()
df
mdfret::readfes("G:/bjohnston/BAJ_01/fes_500000.dat")
mdfret::readfes("G:/bjohnston/BAJ_01/fes_500000_wall.dat")
remotes::install_github("bradyajohnston/readfes")
remotes::install_github("bradyajohnston/mdfret")
source("~/.active-rstudio-document", echo=TRUE)
df <- mdfret::readfes("G:/bjohnston/BAJ_01/fes_500000_wall.dat") %>%
as_tibble()
df
df %>%
select(sss.sss, zzz.zzz, ff1)
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zz
)
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
)
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
) %>%
as.matrix()
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
) %>%
as.matrix() %>%
image()
mat <-
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
) %>%
as.matrix()
dim(mat)
mat[, 500]
mat[, 450]
mat[, 400]
mat[, 380]
mat[, 420]
mat[, 430]
mat[, 500]
mat[, 490]
mat[, 480]
mat[, 470]
mat[, 460]
mat[, 4455]
mat[, 445]
mat[, 455]
mat[, 430]
vec <- mat[, 430]
which.min(vec)
some_function <- function(vec) {
sapply(seq(length(vec)), \(x) {
global_min <- which.min(vec)
vec[global_min] <<- 0
global_min
})
}
some_function(vec)
some_function <- function(vec) {
vec <- ifelse(vec == Inf, 0, vec)
sapply(seq(length(vec)), \(x) {
global_min <- which.max(vec)
vec[global_min] <<- 0
global_min
})
}
some_function(vec)
df <- mdfret::readfes("G:/bjohnston/BAJ_02/fes_500000_wall.dat") %>%
as_tibble()
df
mat <-
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
) %>%
as.matrix()
vec <- mat[, 430]
image(vec)
image(mat)
df <- mdfret::readfes("G:/bjohnston/BAJ_03/fes_500000_wall.dat") %>%
as_tibble()
df
mat <-
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
) %>%
as.matrix()
image(mat)
df <- mdfret::readfes("G:/bjohnston/protein//fes_500000_wall.dat") %>%
as_tibble()
df <- mdfret::readfes("G:/bjohnston/protein/fes_500000_wall.dat") %>%
as_tibble()
df <- mdfret::readfes("G:/bjohnston/protein/protein_metad/fes_500000_wall.dat") %>%
as_tibble()
df
mat <-
df %>%
select(sss.sss, zzz.zzz, ff1) %>%
pivot_wider(
values_from = ff1,
names_from = zzz.zzz
) %>%
as.matrix()
image(mat)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
geom_raster()
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
geom_tile()
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
geom_tile(colour = "na")
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
geom_tile(colour = NA)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
geom_tile(colour = NA) +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion())
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
geom_tile(colour = NA) +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c()
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c(
option = "A"
)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c(
option = "A",
direction = -1
)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(expand = expansion()) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c(
option = "A",
direction = -1,
oob = scales::oob_squish_infinite
)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(
expand = expansion(),
breaks = 0:12
) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c(
option = "A",
direction = -1,
oob = scales::oob_squish_infinite
)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(
expand = expansion(),
breaks = 0:11
) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c(
option = "A",
direction = -1,
oob = scales::oob_squish_infinite
)
df %>%
ggplot(aes(sss.sss, zzz.zzz, fill = ff1)) +
# geom_tile(colour = NA, ) +
geom_raster() +
scale_x_continuous(
expand = expansion(),
breaks = 0:11
) +
scale_y_continuous(expand = expansion()) +
# coord_cartesian(xlim = c(2,3), ylim = c(0.1, 0.2))
NULL +
scale_fill_viridis_c(
option = "A",
direction = -1,
oob = scales::oob_squish_infinite
) +
coord_equal()
install.packages("quarto")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
# Chunk 2: Load
# tt <- tt_load("2021-01-26")
# tt <- saveRDS(tt, "2021-01-26.rds")
tt <- readRDS("2021-01-26.rds")
# Chunk 3: Readme
tt
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
# Chunk 2: Load
# tt <- tt_load("2021-01-26")
# tt <- saveRDS(tt, "2021-01-26.rds")
tt <- readRDS("2021-01-26.rds")
# Chunk 3: Readme
tt
# tt <- tt_load("2021-01-26")
# tt <- saveRDS(tt, "2021-01-26.rds")
tt <- readRDS("2021-01-26.rds")
tt
tt
tt <- readRDS("2021-01-26.rds")
tt
readRDS("2021-01-26.rds")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
# Chunk 2
tt <- readRDS("2021-01-26.rds")
# Chunk 3
tt
install.packages("tidtuesday")
install.packages("tidytuesday")
install.packages("tidytuesdayR")
install.packages("tidytuesdayR")
tt_download("20221-01-26")
tt_download("20221-01-26")
tt_load("2021-01-26")
tt <- tt_load("2021-01-26")
tt
tt %>%
map(glimpse)
# Chunk 1: setup
#| label: setup
library(tidyverse)
library(tidytuesdayR)
# Chunk 2
tt <- tt_load("2021-01-26")
# Chunk 3
tt
# Chunk 4: Glimpse
tt %>%
map(glimpse)
# Chunk 5
tuesdata <- tt
tuesdata$plastics %>% dplyr::filter()
library(stringi)
plastics <- tuesdata$plastics %>%
filter(
!(parent_company %in% c("Grand Total", "null", "Null", "Unbranded"))
) %>%
mutate(
parent_company = parent_company %>%
tolower() %>%
stri_trans_general("Latin-ASCII") %>%
stri_trans_totitle(),
country = stringi::stri_trans_totitle(country)
)
# Chunk 6
top_Co <-  plastics %>%
group_by(parent_company) %>%
summarise(
country_count = n_distinct(country),
grand_total_sum = sum(grand_total, na.rm = T)
) %>%
arrange(-country_count, -grand_total_sum) %>%
head(5)
top_Co
# Chunk 7
hq <- c(
"Atlanta, Georgia, United States", #Coca-Cola
"New York, New York, United States", #PepsiCo
"Vevey, Vaud, Switzerland", #Nestle
"Mclean, Virginia, United States", #Mars
"London, England, United Kingdom" #Unilever
)
# Chunk 9
# To avoid calling the geocoder on each knit
coords = structure(list(address = c("Atlanta, Georgia, United States",
"New York, New York, United States", "Vevey, Vaud, Switzerland",
"Mclean, Virginia, United States", "London, England, United Kingdom"), lat = c(33.7489924, 40.7127281, 46.4602978, 38.9342888, 51.5073219), long = c(-84.3902644, -74.0060152, 6.8418655, -77.1776327, -0.1276474)), row.names = c(NA, -5L), class = c("tbl_df",
"tbl", "data.frame"))
# Chunk 10
countries = plastics %>%
filter(parent_company %in% top_Co$parent_company) %>%
group_by(country) %>%
summarise(count = n())
# Chunk 12
coords_country = structure(list(address = c("Argentina", "Australia", "Bangladesh", "Benin", "Brazil", "Bulgaria", "Burkina Faso", "Cameroon", "Canada", "Chile", "China", "Colombia", "Cyprus", "Denmark", "Ecuador", "El Salvador", "Empty", "France", "Germany", "Ghana", "Greece", "Honduras", "Hong Kong", "India", "Indonesia", "Ireland", "Italy", "Japan", "Kenya", "Korea", "Kuwait", "Latvia", "Lithuania", "Malaysia", "Maldives", "Mexico", "Montenegro", "Netherlands", "Nigeria", "Peru", "Philippines", "Portugal", "Romania", "Rwanda", "Serbia", "Singapore", "Slovenia", "South Africa", "Spain", "Sri Lanka", "Switzerland", "Taiwan_ Republic Of China (Roc)", "Tanzania", "Thailand", "Togo", "Tunisia", "Turkey", "Ukraine", "United Kingdom Of Great Britain & Northern Ireland", "United States Of America", "Vietnam"), lat = c(-34.9964963, -24.7761086, 24.4768783, 9.5293472, -10.3333333, 42.6073975, 12.0753083, 4.6125522, 61.0666922, -31.7613365, 35.000074, 2.8894434, 34.9823018, 55.670249, -1.3397668, 13.8000382, 39.74962805, 46.603354,
51.0834196, 8.0300284, 38.9953683, 15.2572432, 22.2793278, 22.3511148, -2.4833826, 52.865196, 42.6384261, 36.5748441, 1.4419683, 36.638392, 29.2733964, 56.8406494, 55.3500003, 4.5693754, 4.7064352, 22.5000485, 42.9868853, 52.24764975, 9.6000359, -6.8699697, 12.7503486, 40.0332629, 45.9852129, -1.9646631, 44.1534121, 1.357107, 46.14903455, -28.8166236, 39.3260685, 7.5554942, 46.7985624, 23.9739374, -6.5247123, 14.8971921, 8.7800265, 33.8439408, 38.9597594, 49.4871968, 54.7023545, 39.7837304, 13.2904027), long = c(-64.9672817, 134.755, 90.2932426, 2.2584408, -53.2, 25.4856617, -1.6880314, 13.1535811, -107.9917071, -71.3187697, 104.999927, -73.783892, 33.1451285, 10.3333283, -79.3666965, -88.9140683, -104.946658106006, 1.8883335, 10.4234469, -1.0800271, 21.9877132, -86.0755145, 114.1628131, 78.6677428, 117.8902853, -7.9794599, 12.674297, 139.2394179, 38.4313975, 127.6961188, 47.4979476, 24.7537645, 23.7499997, 102.2656823, 73.3287853, -100.0000375, 19.5180992, 5.54124684940616, 7.9999721, -75.0458515, 122.7312101, -7.8896263, 24.6859225, 30.0644358, 20.55144, 103.8194992, 14.6263257533406, 24.991639, -4.8379791, 80.7137847, 8.2319736, 120.9820179, 35.7878438, 100.83273, 1.0199765, 9.400138, 34.9249653, 31.2718321, -3.2765753, -100.4458825, 108.4265113)), row.names = c(NA, -61L), class = c("tbl_df", "tbl", "data.frame"))
# Chunk 13
countries <- countries %>%
left_join(coords_country,  by = c("country" = "address"))
countries
# Chunk 14
top_parent_companies = top_Co %>%
mutate(hq = hq, lat = coords$lat, long = coords$long) %>%
# st_as_sf(crs = 4326, coords = c("long", "lat")) %>%
mutate(parent_company = case_when(
parent_company == "The Coca-Cola Company" ~ "Coca-Cola",
parent_company == "Mars, Incorporated" ~ "Mars, Inc.",
TRUE ~ parent_company
)) %>%
select(name = parent_company) %>%
mutate(type = "Parent Company")
companies <- top_Co %>%
mutate(hq = hq, com_lat = coords$lat, com_long = coords$long)
# Chunk 15
com_countries <- plastics %>%
select(country, parent_company, grand_total)
# companies
plotting <- com_countries %>%
left_join(countries) %>%
left_join(companies) %>%
filter(parent_company %in% companies$parent_company)
plotting
# Chunk 16
library(echarts4r)
library(echarts4r.assets)
install.packages("echarts4r.assets")
remotes::install_github("JohnCoene/echarts4r.assets")
install.packages("r3dmol")
install.packages("available")
